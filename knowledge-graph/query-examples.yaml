# Knowledge Graph Query Examples
version: "1.0"

queries:
  # Query 1: Find Phase2 ventures with AI modules
  phase2_ai_ventures:
    description: "List all ventures in Phase2 that utilize AI modules"
    pattern:
      match:
        venture:
          type: "DigitalVenture"
          properties:
            current_phase: "Phase2"
            usesAIModule: true
      return:
        - venture.id
        - venture.name
        - venture.business_model
        - venture.automationLevel
    example_result:
      ventures:
        - id: "DV001"
          name: "AI-Driven Analytics Platform"
          business_model: "SaaS"
          automationLevel: "Advanced"
    example_syntax:
      cypher: |
        MATCH (v:DigitalVenture)-[:IN_PHASE]->(p:Phase)
        WHERE p.name = 'Phase2' AND v.usesAIModule = true
        RETURN v.id, v.name, v.business_model, v.automationLevel;
      sparql: |
        PREFIX onto: <http://wmo-digital-ai.org/ontology#>
        SELECT ?id ?name ?model ?level
        WHERE {
          ?venture a onto:DigitalVenture ;
                   onto:currentPhase "Phase2" ;
                   onto:usesAIModule true .
        }

  # Query 2: Role collaboration on ventures
  venture_role_collaboration:
    description: "Find which roles collaborate on a specific digital venture"
    pattern:
      match:
        venture:
          type: "DigitalVenture"
          properties:
            id: "$venture_id"
        roles:
          relationship: "contributesTo"
          target: "venture"
      return:
        - roles.id
        - roles.title
        - roles.responsibilities
    example_result:
      roles:
        - id: "R001"
          title: "EmergingTechSpecialist"
          responsibilities: ["Evaluate emerging technologies", "Assess technical feasibility"]
    example_syntax:
      cypher: |
        MATCH (r:Role)-[:CONTRIBUTES_TO]->(v:DigitalVenture)
        WHERE v.id = $venture_id
        RETURN r.id, r.title, r.responsibilities;
      sparql: |
        SELECT ?roleId ?title ?resp
        WHERE {
          ?role a :Role ;
                :contributesTo ?venture ;
                :id ?roleId ;
                :title ?title ;
                :responsibilities ?resp .
          ?venture :id "$venture_id" .
        }

  # Query 3: AI process implementation patterns
  ai_process_patterns:
    description: "Analyze AI process implementation across venture types"
    pattern:
      match:
        venture:
          type: "DigitalVenture"
        process:
          type: "AIProcess"
          relationship: "implementsAI"
          source: "venture"
      group_by:
        - venture.business_model
        - process.process_type
      return:
        - count(process)
        - process.automation_level
    example_result:
      patterns:
        - business_model: "SaaS"
          process_type: "Predictive Analytics"
          process_count: 5
          automation_level: "Full"
    example_syntax:
      cypher: |
        MATCH (v:DigitalVenture)-[:IMPLEMENTS_AI]->(p:AIProcess)
        RETURN v.business_model, p.process_type, 
               count(p) as process_count, p.automation_level
        GROUP BY v.business_model, p.process_type, p.automation_level;

  # Query 4: Market segment analysis
  venture_market_mapping:
    description: "Map ventures to their target market segments"
    pattern:
      match:
        venture:
          type: "DigitalVenture"
        segment:
          type: "MarketSegment"
          relationship: "targets"
          source: "venture"
      return:
        - venture.business_model
        - segment.segment_name
        - segment.market_size
        - segment.growth_potential
    example_result:
      mappings:
        - business_model: "SaaS"
          segment_name: "Enterprise Software"
          market_size: 1000000000
          growth_potential: 0.15
    example_syntax:
      cypher: |
        MATCH (v:DigitalVenture)-[:TARGETS]->(s:MarketSegment)
        RETURN v.business_model, s.segment_name, 
               s.market_size, s.growth_potential;

  # Query 5: Risk profile assessment
  venture_risk_analysis:
    description: "Analyze risk profiles across different venture types"
    pattern:
      match:
        venture:
          type: "DigitalVenture"
        risk:
          type: "RiskProfile"
          relationship: "assessedBy"
          target: "venture"
      return:
        - venture.business_model
        - risk.risk_level
        - risk.mitigation_strategies
    example_result:
      risk_profiles:
        - business_model: "Ecommerce"
          risk_level: "Medium"
          mitigation_strategies: ["Market diversification", "Agile scaling"]
    example_syntax:
      cypher: |
        MATCH (v:DigitalVenture)-[:ASSESSED_BY]->(r:RiskProfile)
        RETURN v.business_model, r.risk_level, r.mitigation_strategies;